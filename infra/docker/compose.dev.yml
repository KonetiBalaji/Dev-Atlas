# DevAtlas Docker Compose Development Configuration
# Created by Balaji Koneti

version: '3.9'

services:
  # PostgreSQL Database with pgvector extension
  db:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: devatlas
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for job queues
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO for object storage
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Ollama for local LLM inference
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3

  # DevAtlas API
  api:
    build:
      context: ../../
      dockerfile: apps/api/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/devatlas
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=http://minio:9000
      - S3_REGION=us-east-1
      - S3_ACCESS_KEY=minio
      - S3_SECRET_KEY=minio123
      - S3_BUCKET=devatlas
      - JWT_SECRET=devatlas-dev-secret-change-in-production
      - MULTI_TENANCY_MODE=org
      - ALLOWED_ORIGINS=http://localhost:3000
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - EMBEDDING_MODEL=text-embedding-3-small
      - GITHUB_APP_ID=${GITHUB_APP_ID:-}
      - GITHUB_APP_PRIVATE_KEY_BASE64=${GITHUB_APP_PRIVATE_KEY_BASE64:-}
      - GITHUB_APP_CLIENT_ID=${GITHUB_APP_CLIENT_ID:-}
      - GITHUB_APP_CLIENT_SECRET=${GITHUB_APP_CLIENT_SECRET:-}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ../../apps/api:/app
      - /app/node_modules
    command: pnpm dev

  # DevAtlas Worker
  worker:
    build:
      context: ../../
      dockerfile: apps/worker/Dockerfile
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/devatlas
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=http://minio:9000
      - S3_REGION=us-east-1
      - S3_ACCESS_KEY=minio
      - S3_SECRET_KEY=minio123
      - S3_BUCKET=devatlas
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - OLLAMA_BASE_URL=http://ollama:11434
      - MAX_TOKENS_PER_REPO=40000
      - MAX_PARALLEL_CLONES=3
      - GITHUB_TOKEN=${GITHUB_TOKEN:-}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      ollama:
        condition: service_healthy
    volumes:
      - ../../apps/worker:/app
      - /app/node_modules
      - /tmp/devatlas:/tmp/devatlas
    command: pnpm dev

  # DevAtlas Web
  web:
    build:
      context: ../../
      dockerfile: apps/web/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_BASE=http://localhost:8080
      - NEXTAUTH_SECRET=devatlas-dev-secret-change-in-production
      - NEXTAUTH_URL=http://localhost:3000
      - GITHUB_OAUTH_CLIENT_ID=${GITHUB_OAUTH_CLIENT_ID:-}
      - GITHUB_OAUTH_CLIENT_SECRET=${GITHUB_OAUTH_CLIENT_SECRET:-}
    depends_on:
      - api
    volumes:
      - ../../apps/web:/app
      - /app/node_modules
      - /app/.next
    command: pnpm dev

volumes:
  postgres_data:
  redis_data:
  minio_data:
  ollama_data:
